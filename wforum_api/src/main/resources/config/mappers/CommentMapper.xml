<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tingxia.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.tingxia.pojo.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="content_type" jdbcType="INTEGER" property="contentType" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="ups" jdbcType="INTEGER" property="ups" />
    <result column="reply_user_id" jdbcType="INTEGER" property="replyUserId" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="source_name" jdbcType="VARCHAR" property="sourceName" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <association property="user" column="user_id" select="com.tingxia.dao.UserMapper.selectUserPublicInfo"/>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapComment" type="com.tingxia.pojo.Comment">
    <association property="replyCount" column="id" select="selectReplyCount"/>
    <association property="user" column="user_id" select="com.tingxia.dao.UserMapper.selectUserPublicInfo"/>
  </resultMap>
  <resultMap extends="ResultMapComment" id="ResultMapCommentWithUp" type="com.tingxia.pojo.Comment">
    <result column="is_up" jdbcType="BIT" property="isUp" />
  </resultMap>

  <resultMap extends="BaseResultMap" id="ResultMapReply" type="com.tingxia.pojo.Comment">
    <association property="user" column="user_id" select="com.tingxia.dao.UserMapper.selectUserPublicInfo"/>
    <association property="replyUser" column="reply_user_id" select="com.tingxia.dao.UserMapper.selectUserPublicInfo"/>
    <association property="parentComment" column="parent_id" select="selectByPrimaryKey"/>
  </resultMap>
  <resultMap extends="ResultMapReply" id="ResultMapReplyWithUp" type="com.tingxia.pojo.Comment">
    <result column="is_up" jdbcType="BIT" property="isUp" />
  </resultMap>

  <resultMap extends="ResultMapReply" id="ResultMapUserComment" type="com.tingxia.pojo.Comment">
    <result column="article_name" jdbcType="VARCHAR" property="articleName" />
  </resultMap>
  <sql id="Base_Column_List">
    c.id, c.content_type, c.parent_id, c.status, c.ups, c.reply_user_id, c.source_name, c.user_id, c.created_at,
    c.updated_at, c.deleted_at, c.article_id, c.content
  </sql>
  <sql id="Column_Article_Name">
    a.name as article_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comments c
    where c.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectComments" parameterType="java.lang.Integer" resultMap="ResultMapComment">
    select
    <include refid="Base_Column_List" />
    from comments c
    where c.article_id = #{articleId,jdbcType=INTEGER} and c.source_name = 'article' and c.status = 1
    order by created_at
  </select>
  <select id="selectCommentsWithUp" parameterType="java.lang.Integer" resultMap="ResultMapCommentWithUp">
    select
    <include refid="Base_Column_List" /> ,!isnull(u.id) as is_up
    from comments c left join ups u on u.type = 2 and c.id = u.target_id and u.user_id = #{userId}
    where c.article_id = #{articleId,jdbcType=INTEGER} and c.source_name = 'article' and c.status = 1
    order by created_at
  </select>
  <select id="selectReplies" parameterType="java.lang.Integer" resultMap="ResultMapReply">
    select
    <include refid="Base_Column_List" />
    from comments c
    where c.article_id = #{articleId,jdbcType=INTEGER} and c.parent_id = #{parentId,jdbcType=INTEGER} and c.status =1
    order by created_at
  </select>
  <select id="selectRepliesWithUp" parameterType="java.lang.Integer" resultMap="ResultMapReplyWithUp">
    select
    <include refid="Base_Column_List" /> ,!isnull(u.id) as is_up
    from comments c left join ups u on u.type = 3 and c.id = u.target_id and u.user_id = #{userId}
    where c.article_id = #{articleId,jdbcType=INTEGER} and c.parent_id = #{parentId,jdbcType=INTEGER} and c.status =1
    order by created_at
  </select>
  <select id="selectUserComments" parameterType="java.lang.Integer" resultMap="ResultMapUserComment">
    select
    <include refid="Base_Column_List" />
    , <include refid="Column_Article_Name"/>
    from comments c left join articles a on a.id = c.article_id
    where c.user_id = #{userId,jdbcType=INTEGER} and a.status=1 and c.status = 1
    order by created_at
  </select>

  <select id="selectReplyCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(1) from comments where parent_id = #{commentId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comments
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tingxia.pojo.Comment" useGeneratedKeys="true" keyProperty="id">
    insert into comments (content_type, parent_id,
      status, ups, reply_user_id,
      source_name, user_id, created_at, 
      updated_at, deleted_at, content, article_id
      )
    values ( #{contentType,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER}, #{ups,jdbcType=INTEGER}, #{replyUserId,jdbcType=INTEGER},
      #{sourceName,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{deletedAt,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR},
      #{articleId,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tingxia.pojo.Comment">
    update comments
    <set>
      <if test="contentType != null">
        content_type = #{contentType,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="ups != null">
        ups = #{ups,jdbcType=INTEGER},
      </if>
      <if test="replyUserId != null">
        reply_user_id = #{replyUserId,jdbcType=INTEGER},
      </if>
      <if test="sourceName != null">
        source_name = #{sourceName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tingxia.pojo.Comment">
    update comments
    set content_type = #{contentType,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      ups = #{ups,jdbcType=INTEGER},
      reply_user_id = #{sourceId,jdbcType=INTEGER},
      article_id = #{sourceId,jdbcType=INTEGER},
      source_name = #{sourceName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateStatus" parameterType="java.lang.Integer">
    update comments
    set status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectCommentList" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List"/>
    from comments c
    <where>
      <if test="startAt != null">
        c.created_at &gt;= #{startAt}
      </if>
      <if test="endAt != null">
        and c.created_at &lt;  #{endAt}
      </if>
      <if test="status != null">
        and c.status = #{status}
      </if>
    </where>
  </select>
  <select id="selectUp" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(1) from ups where type = #{type} and target_id = #{targetId} and user_id = #{userId}
  </select>
  <delete id="deleteUp" parameterType="java.lang.Integer">
    delete from ups where type = #{type} and target_id = #{targetId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insertUp" parameterType="java.lang.Integer">
    insert into ups(type,target_id,user_id,created_at,updated_at) values (#{type,jdbcType=INTEGER},#{targetId,jdbcType=INTEGER},#{userId,jdbcType=INTEGER},now(),now())
  </insert>
  <update id="updateUps" parameterType="java.lang.Integer">
    update comments set ups = ups + #{offset,jdbcType=INTEGER} where id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>